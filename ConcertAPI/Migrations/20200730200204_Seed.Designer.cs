// <auto-generated />
using ConcertAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConcertAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200730200204_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConcertAPI.Models.Concert", b =>
                {
                    b.Property<int>("ConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConcertId");

                    b.ToTable("Concerts");

                    b.HasData(
                        new
                        {
                            ConcertId = 1,
                            Artist = "Gojira",
                            City = "Milwaukee",
                            Date = "7/30/2020 7:00:00 PM",
                            Genre = "Metal",
                            Lat = 43.038221999999998,
                            Long = -87.943191999999996,
                            State = "WI",
                            Venue = "The Eagles Ballroom"
                        },
                        new
                        {
                            ConcertId = 2,
                            Artist = "Gojira",
                            City = "Chicago",
                            Date = "7/31/2020 7:00:00 PM",
                            Genre = "Metal",
                            Lat = 41.862907999999997,
                            Long = -87.608750999999998,
                            State = "IL",
                            Venue = "Huntington Bank Pavilion"
                        },
                        new
                        {
                            ConcertId = 3,
                            Artist = "Caligula's Horse",
                            City = "Chicago",
                            Date = "8/30/2020 7:00:00 PM",
                            Genre = "Metal",
                            Lat = 41.853991000000001,
                            Long = -87.626757999999995,
                            State = "IL",
                            Venue = "Reggie's"
                        },
                        new
                        {
                            ConcertId = 4,
                            Artist = "Tigran Hamasyan",
                            City = "Chicago",
                            Date = "9/07/2020 7:00:00 PM",
                            Genre = "Jazz",
                            Lat = 41.925946000000003,
                            Long = -87.649837000000005,
                            State = "IL",
                            Venue = "Lincoln Hall"
                        },
                        new
                        {
                            ConcertId = 5,
                            Artist = "Wardruna",
                            City = "Chicago",
                            Date = "10/02/2020 7:00:00 PM",
                            Genre = "Neofolk",
                            Lat = 41.875847999999998,
                            Long = -87.625112999999999,
                            State = "IL",
                            Venue = "Auditorium Theatre"
                        },
                        new
                        {
                            ConcertId = 6,
                            Artist = "Jinjer",
                            City = "Racine",
                            Date = "10/26/2020 7:00:00 PM",
                            Genre = "Metal",
                            Lat = 42.726098999999998,
                            Long = -87.957559000000003,
                            State = "WI",
                            Venue = "Route 20"
                        },
                        new
                        {
                            ConcertId = 7,
                            Artist = "Nothing More",
                            City = "Racine",
                            Date = "02/12/2021 7:00:00 PM",
                            Genre = "Rock",
                            Lat = 42.726098999999998,
                            Long = -87.957559000000003,
                            State = "WI",
                            Venue = "Route 20"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
